/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Edu.esprit.GUI;

import Edu.esprit.utils.MyConnection;
import com.mysql.jdbc.ResultSet;
import java.sql.Connection;
import java.util.Locale;
import javax.swing.JOptionPane;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.data.jdbc.JDBCCategoryDataset;

/**
 *
 * @author pc-manel
 */
public class stat extends javax.swing.JFrame {
    Connection conn=null;
java.sql.ResultSet rs =null;

    /**
     * Creates new form stat
     */
    public stat() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPieChart = new javax.swing.JButton();
        btnBarChart = new javax.swing.JButton();
        btnQueryChart = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnPieChart.setText("Bie chart");
        btnPieChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPieChartActionPerformed(evt);
            }
        });

        btnBarChart.setText("Bar Chart");
        btnBarChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBarChartActionPerformed(evt);
            }
        });

        btnQueryChart.setText("Query Chart");
        btnQueryChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQueryChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addComponent(btnPieChart)
                .addGap(18, 18, 18)
                .addComponent(btnBarChart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnQueryChart)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(154, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPieChart)
                    .addComponent(btnBarChart)
                    .addComponent(btnQueryChart))
                .addGap(123, 123, 123))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPieChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPieChartActionPerformed
     
            try{
      
   String query="select date_eval,note from evaluation";
   JDBCCategoryDataset  dataset = new JDBCCategoryDataset(MyConnection.getInstance(), query);
     JFreeChart chart = ChartFactory.createPieChart3D(query, null, true, true, true);
     BarRenderer renderer =null;
     CategoryPlot plot = chart.getCategoryPlot();
     renderer = new BarRenderer();
     
     ChartFrame frame = new ChartFrame("Query chart",chart);
      frame.setVisible(true); 
      frame.setSize(450,650);
      }
      catch(Exception e) {
      JOptionPane.showMessageDialog(null, e);
      
    }                                             


    }//GEN-LAST:event_btnPieChartActionPerformed

    private void btnQueryChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQueryChartActionPerformed
     try{
      
   String query="SELECT sum(note)/count(*) from evaluation where id_offre=?";
   
   JDBCCategoryDataset  dataset = new JDBCCategoryDataset(MyConnection.getInstance(), query);
     JFreeChart chart = ChartFactory.createLineChart("Query chart", "Note", "Date", dataset, PlotOrientation.VERTICAL,false,true,true) ;
     BarRenderer renderer =null;
     CategoryPlot plot = chart.getCategoryPlot();
     renderer = new BarRenderer();
     
     ChartFrame frame = new ChartFrame("Query chart",chart);
      frame.setVisible(true); 
      frame.setSize(450,650);
      }
      catch(Exception e) {
      JOptionPane.showMessageDialog(null, e);
      }
    }//GEN-LAST:event_btnQueryChartActionPerformed

    private void btnBarChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBarChartActionPerformed
        // TODO add your handling code here:
        try{
      
   String query="select date_eval,note from evaluation";
   JDBCCategoryDataset  dataset = new JDBCCategoryDataset(MyConnection.getInstance(), query);
     JFreeChart chart = ChartFactory.createBarChart("Bar chart", "Note", "Date", dataset, PlotOrientation.VERTICAL,false,true,true) ;
     BarRenderer renderer =null;
     CategoryPlot plot = chart.getCategoryPlot();
     renderer = new BarRenderer();
     
     ChartFrame frame = new ChartFrame("Bar chart",chart);
      frame.setVisible(true); 
      frame.setSize(450,650);
      }
      catch(Exception e) {
      JOptionPane.showMessageDialog(null, e);
      }
   
    }//GEN-LAST:event_btnBarChartActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(stat.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new stat().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBarChart;
    private javax.swing.JButton btnPieChart;
    private javax.swing.JButton btnQueryChart;
    // End of variables declaration//GEN-END:variables
}
